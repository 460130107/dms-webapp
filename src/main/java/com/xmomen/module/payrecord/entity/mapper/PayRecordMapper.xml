<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmomen.module.payrecord.entity.mapper.PayRecordMapper" >
  <resultMap id="BaseResultMap" type="com.xmomen.module.payrecord.entity.PayRecord" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="TRADE_NO" property="tradeNo" jdbcType="VARCHAR" />
    <result column="TRADE_TYPE" property="tradeType" jdbcType="INTEGER" />
    <result column="TOTAL_FEE" property="totalFee" jdbcType="DECIMAL" />
    <result column="OPEN_ID" property="openId" jdbcType="VARCHAR" />
    <result column="TRANSACTION_ID" property="transactionId" jdbcType="VARCHAR" />
    <result column="TRANSACTION_TIME" property="transactionTime" jdbcType="TIMESTAMP" />
    <result column="COMPLETE_TIME" property="completeTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, TRADE_NO, TRADE_TYPE, TOTAL_FEE, OPEN_ID, TRANSACTION_ID, TRANSACTION_TIME, COMPLETE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xmomen.module.payrecord.entity.PayRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_pay_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xmomen.module.payrecord.entity.PayRecordExample" >
    delete from tb_pay_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.xmomen.module.payrecord.entity.PayRecord" useGeneratedKeys="true" keyProperty="id" keyColumn="ID" >
    <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE" >
      SELECT replace(UUID(),'-','')
    </selectKey>
    insert into tb_pay_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      <if test="tradeNo != null" >
        TRADE_NO,
      </if>
      <if test="tradeType != null" >
        TRADE_TYPE,
      </if>
      <if test="totalFee != null" >
        TOTAL_FEE,
      </if>
      <if test="openId != null" >
        OPEN_ID,
      </if>
      <if test="transactionId != null" >
        TRANSACTION_ID,
      </if>
      <if test="transactionTime != null" >
        TRANSACTION_TIME,
      </if>
      <if test="completeTime != null" >
        COMPLETE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=VARCHAR},
      <if test="tradeNo != null" >
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null" >
        #{tradeType,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="transactionId != null" >
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="transactionTime != null" >
        #{transactionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completeTime != null" >
        #{completeTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xmomen.module.payrecord.entity.PayRecordExample" resultType="java.lang.Integer" >
    select count(*) from tb_pay_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_pay_record
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeNo != null" >
        TRADE_NO = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeType != null" >
        TRADE_TYPE = #{record.tradeType,jdbcType=INTEGER},
      </if>
      <if test="record.totalFee != null" >
        TOTAL_FEE = #{record.totalFee,jdbcType=DECIMAL},
      </if>
      <if test="record.openId != null" >
        OPEN_ID = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionId != null" >
        TRANSACTION_ID = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionTime != null" >
        TRANSACTION_TIME = #{record.transactionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.completeTime != null" >
        COMPLETE_TIME = #{record.completeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>